<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


	<!-- 1).扫描 -->
	<context:component-scan base-package="com.blog">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<!-- 2).导入jdbc的配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 3).配置数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClass" value="${jdbc.driverClassName}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
	</bean>

	<!-- 5).配置事务管理器:控制数据库连接池,绑定数据源 -->
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 6).配置事务切面 ;需要aop和tx名称空间;transactionManager事务切面-->
	<aop:config>
		<aop:pointcut expression="execution(* com.blog.service.*.*(..))" id="txPoint"/>
		<aop:advisor advice-ref="myTxAdvice" pointcut-ref="txPoint" order="2"/>
	</aop:config>
	<tx:advice id="myTxAdvice" transaction-manager="dataSourceTransactionManager">
		<tx:attributes>
			<tx:method name="*" rollback-for="java.lang.Exception" propagation="REQUIRES_NEW"/>
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<!-- 7). 整合MyBatis-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="com.blog.pojo"></property>
		<property name="mapperLocations" value="classpath:com/blog/mapper/*.xml"></property>
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties"> 
						<props>
							<prop key="helperDialect">mysql</prop>
							<prop key="reasonable">true</prop>
						</props>
					</property>
				</bean>
			</array>
		</property>
	</bean>
	
	<!--8).把每个dao接口的实现加入到ioc容器中-->
	<mybatis-spring:scan base-package="com.blog.mapper"/>
	
	
	<!-- 9).邮箱配置 -->
	<!-- <context:property-placeholder location="classpath:mail.properties"/> -->
  <!-- 邮件配置 -->	
  <bean id="javaMailSenderImpl" class="org.springframework.mail.javamail.JavaMailSenderImpl">
     <property name="defaultEncoding" value="UTF-8"></property>
     <property name="username" value="iamlinhui@foxmail.com"></property>
     <property name="password" value="dadadadada"></property>
     <property name="port" value="465"></property>
     <property name="host" value="smtp.qq.com"></property>
     <property name="protocol" value="smtp"></property>
 
     <property name="javaMailProperties">
        <props>
           <prop key="mail.smtps.auth">true</prop>
           <prop key="mail.smtp.ssl.enable">true</prop>
        </props>
     </property>
  </bean>
  
  <bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
   <property name="from" value="iamlinhui@foxmail.com"></property>
  </bean>
  

<!-- 10).ehcache缓存配置 -->
  <!-- 生成键生成器 -->
	<bean id="cacheKey" class="com.blog.cache.CacheKey"/>
	
	<!-- 配置缓存管理器工厂 -->
	<bean id="ehCacheManagerFactoryBean" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<!-- 指定EHCache配置文件的位置 -->
		<property name="configLocation" value="classpath:ehcache.xml"></property>
		<property name="shared" value="true"></property>  
	</bean>

	<!-- 配置缓存管理器 -->
	<bean id="ehCacheCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<!-- 装配缓存管理器工厂 -->
		<property name="cacheManager" ref="ehCacheManagerFactoryBean"></property>
	</bean>
	
	<!-- 配置缓存管理器 -->
	<aop:config>
		<aop:pointcut expression="execution(* *..OptionsService.*(..))
								or execution(* *..PostsService.*(..))
								or execution(* *..TermsService.*(..))" 
						id="cachePoint"/>
		
		<!-- 将缓存界面的的优先级设置高于事务切面;优先级高的切面放在外面 -->
		<aop:advisor advice-ref="cacheAdvice" pointcut-ref="cachePoint" order="1"/>
	</aop:config>
	
	<!-- 配置缓存通知 -->
	<cache:advice id="cacheAdvice" cache-manager="ehCacheCacheManager" key-generator="cacheKey">
		<!-- 站点设置缓存 -->
		<cache:caching cache="optionsCache">
			<cache:cacheable method="getOption"/>
			<cache:cache-evict method="bathSaveOptions" all-entries="true" />
		</cache:caching>	
		
		<!-- 文章详细缓存 -->
		<cache:caching cache="postsCache">
			<cache:cacheable method="getArticleByPostsIdWithTerms" />
			<cache:cacheable method="getArticleByPostsId" />
			<cache:cacheable method="getArticles" />
			<cache:cache-evict method="saveArticleWithTerms" all-entries="true" />
			<cache:cache-evict method="saveArticle" all-entries="true" />
			<cache:cache-evict method="updateArticle" all-entries="true" />
			<cache:cache-evict method="batchDeleteArticles" all-entries="true" />
		</cache:caching>
		
		<!-- 导航缓存 -->
		<cache:caching cache="termsCache">
			<cache:cacheable method="getNameBySlug" />
			<cache:cacheable method="getTerms" />
			<cache:cache-evict method="deleteTermsById" all-entries="true" />
			<cache:cache-evict method="downTerms" all-entries="true" />
			<cache:cache-evict method="saveTerms" all-entries="true" />
			<cache:cache-evict method="updateTerms" all-entries="true" />
			<cache:cache-evict method="upTerms" all-entries="true" />
		</cache:caching>
		
		
	</cache:advice>
  
  
</beans>
