<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.promptness.blog.mapper.UsersMapper">
    <resultMap id="BaseResultMap" type="cn.promptness.blog.pojo.Users">
        <id column="ID" property="id" jdbcType="BIGINT"/>
        <result column="user_login" property="userLogin" jdbcType="VARCHAR"/>
        <result column="user_pass" property="userPass" jdbcType="VARCHAR"/>
        <result column="user_nicename" property="userNicename" jdbcType="VARCHAR"/>
        <result column="user_email" property="userEmail" jdbcType="VARCHAR"/>
        <result column="user_registered" property="userRegistered" jdbcType="TIMESTAMP"/>
        <result column="user_status" property="userStatus" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
    ID, user_login, user_pass, user_nicename, user_email, user_registered, user_status
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from wp_users
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <select id="listUser" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from wp_users order by ID asc
    </select>
    <select id="getUserByUserLogin" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from wp_users
        where user_login = #{loginName} and user_pass = #{password}
    </select>
    <select id="getUserByUserEmail" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from wp_users
        where user_email = #{loginName} and user_pass = #{password}
    </select>
    <select id="countUserName" resultType="java.lang.Integer">
        select COUNT(1)
        from wp_users
        where user_login = #{username}
    </select>
    <select id="countEmail" resultType="java.lang.Integer">
        select COUNT(1)
        from wp_users
        where user_email = #{email}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from wp_users
    where ID = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="cn.promptness.blog.pojo.Users">
    insert into wp_users (ID, user_login, user_pass, 
      user_nicename, user_email, user_registered, 
      user_status)
    values (#{id,jdbcType=BIGINT}, #{userLogin,jdbcType=VARCHAR}, #{userPass,jdbcType=VARCHAR}, 
      #{userNicename,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userRegistered,jdbcType=TIMESTAMP}, 
      #{userStatus,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="cn.promptness.blog.pojo.Users">
        insert into wp_users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="userLogin != null">
                user_login,
            </if>
            <if test="userPass != null">
                user_pass,
            </if>
            <if test="userNicename != null">
                user_nicename,
            </if>
            <if test="userEmail != null">
                user_email,
            </if>
            <if test="userRegistered != null">
                user_registered,
            </if>
            <if test="userStatus != null">
                user_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userLogin != null">
                #{userLogin,jdbcType=VARCHAR},
            </if>
            <if test="userPass != null">
                #{userPass,jdbcType=VARCHAR},
            </if>
            <if test="userNicename != null">
                #{userNicename,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null">
                #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="userRegistered != null">
                #{userRegistered,jdbcType=TIMESTAMP},
            </if>
            <if test="userStatus != null">
                #{userStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.promptness.blog.pojo.Users">
        update wp_users
        <set>
            <if test="userLogin != null">
                user_login = #{userLogin,jdbcType=VARCHAR},
            </if>
            <if test="userPass != null">
                user_pass = #{userPass,jdbcType=VARCHAR},
            </if>
            <if test="userNicename != null">
                user_nicename = #{userNicename,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null">
                user_email = #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="userRegistered != null">
                user_registered = #{userRegistered,jdbcType=TIMESTAMP},
            </if>
            <if test="userStatus != null">
                user_status = #{userStatus,jdbcType=INTEGER},
            </if>
        </set>
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.promptness.blog.pojo.Users">
    update wp_users
    set user_login = #{userLogin,jdbcType=VARCHAR},
      user_pass = #{userPass,jdbcType=VARCHAR},
      user_nicename = #{userNicename,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_registered = #{userRegistered,jdbcType=TIMESTAMP},
      user_status = #{userStatus,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>

    <!-- void updatePassword(@Param("newPassword")String new_password, @Param("email")String email); -->
    <update id="updatePassword">
  	UPDATE `wp_users` SET `user_pass` = #{newPassword} WHERE `user_email`=#{email}
  </update>


    <!-- void updateUserNicenameById(@Param("id")Long id, @Param("userNicename")String userNicename);-->
    <update id="updateUserNiceNameById">
  	UPDATE `wp_users` SET `user_nicename` = #{userNiceName} WHERE `id`=#{id}
  </update>

    <!-- void updateUserPasswordById(@Param("id")Long id, @Param("password")String password); -->
    <update id="updateUserPasswordById">
  		UPDATE `wp_users` SET `user_pass` = #{password} WHERE `id`=#{id}
  </update>

</mapper>